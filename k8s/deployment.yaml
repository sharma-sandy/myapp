# k8s/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple-flask-app
  labels:
    app: simple-flask
spec:
  replicas: 2 # Run 2 instances of our application
  selector:
    matchLabels:
      app: simple-flask
  template:
    metadata:
      labels:
        app: simple-flask
    spec:
      containers:
      - name: flask-container
        image: sandeep/simple-flask-app:v0.1.0 # <-- IMPORTANT: Use the image name from Step 3
        # If the image is only available locally within Colima's Docker and not pushed to a registry,
        # you might need to set imagePullPolicy to IfNotPresent or Never.
        # For images built and tagged locally, 'IfNotPresent' is usually fine if the tag is unique.
        # If you use a tag like 'latest' that might exist remotely, Kubernetes might try to pull it.
        imagePullPolicy: IfNotPresent # Or 'Never' if it's purely local and tag might conflict
        ports:
        - containerPort: 5000 # The port your Flask app listens on inside the container
        livenessProbe:
          httpGet:
            path: /health # Path to the health check endpoint
            port: 5000
          initialDelaySeconds: 15 # Wait 15s before first probe
          periodSeconds: 20    # Probe every 20s
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 10
